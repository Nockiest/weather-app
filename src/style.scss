// Define color variables
$primary-color: #1E2A3A;
$on-primary: "white";
$secondary-color: #283747;
$on-secondary: #DBECFD;
$body-text-style: 16px;


// * {
// height: 100%;
// }
// Apply styles to the page
body {
  position: relative;
  color: $on-primary;
  width: 100vw;
  height: 100vh;
  /* gradient secondary */
  // background: linear-gradient(
  //   138.29deg,
  //   $secondary-color 16.55%,
  //   rgba(217, 217, 217, 0) 277.14%
  // );
  display: flex;
  flex-direction: column;
  justify-content: center;
 // align-items: center;

  & > * {
    margin: 0 auto;
  }
}

div {
  border: solid 1px white;
 // height: 100%;

  & > * {
   // height: 100%;
    border: solid 1px pink;
  }
}

.upper-container {
  display: flex;
  flex-direction: row;
  width: 1176px;
  height: 40%;
  justify-content: space-between;
  align-items: center;
  border-top: none;

  // Define styles for the child elements
  & > * {
    flex-basis: calc(33.33% - 20px); // subtract margin or padding from child width
    height: 100%;
  }
}

.forecast-input {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin-right: 25%;
}

.forecast-input > div {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 75%;
  border-radius: 24px;
}

.forecast-input > div > p  {
width: 181px;
font-size: $body-text-style;
color: $on-primary;
height: $body-text-style;
background: $primary-color;
}

.forecast-input > div > input[type="text"] {
  margin-top: 10px;
 
  border: none;

  width: 143px;
height: 56px;
}

.forecast-input > button {
  border: none;
  background-color: transparent;
  width: 30px;
  height: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.forecast-input > button > i {
  font-size: 20px;
  color: black;
}

.lower-container {
  display: flex;
  flex-direction: row;
  margin: auto;
  width: 1183px;
  height: 60%;
  justify-content: space-between;
  align-items: center;
  border-top: none;

  // Define styles for the child elements
  & > * {
    flex-basis: calc(25% - 20px); // subtract margin or padding from child width
  }
}

 